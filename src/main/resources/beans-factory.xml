<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!--实例工厂方法：将对象的创建过程封装到另外一个对象实例的方法里。当客户端需要请求对象时 , 只需要简单的调用该实例方法而不需要关心对象的创建细节。
    要声明通过实例工厂方法创建的 bean
    在 bean 的factory-bean 属性里指定拥有该工厂方法的bean。
    在 factory-method 属性里指定该工厂方法的名称。
    使用 <constructor-arg> 元素为工厂方法传递方法参数-->


    <!--调用静态工厂方法创建 bean 是将对象创建的过程封装到静态方法中 , 当客户端需要对象时 , 只需要简单地调用静态方法 , 而不需要关心创建对象的细节。
    要声明通过静态方法创建的 bean :
    需要在 bean 的 class 属性里面指定拥有该工厂的方法的类 ,
    同时在 factory-method 属性里指定工厂方法的名称。
    最后 , 使用 <constructor-arg> 元素为该方法传递方法参数。-->

    <bean id="car1" class="cn.nokia.helloword.factory.StaticFactory" factory-method="getCar">
        <constructor-arg value="BMW"></constructor-arg>
    </bean>

    <bean id="carfactory" class="cn.nokia.helloword.factory.InstanceFactory"></bean>

    <bean id="car2" factory-bean="carfactory" factory-method="getCar">
        <constructor-arg value="BC"></constructor-arg>
    </bean>
</beans>